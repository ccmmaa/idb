from TestSuite.ApplicationPages import *
import unittest

class GuiTests(unittest.TestCase):

    def test_loadWebApp(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Browser().close()

    def test_navigateToSongs(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoSongs()
        self.assertTrue(Navigation().isSongsPage())
        Browser().close()

    def test_navigateToArtists(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoArtists()
        self.assertTrue(Navigation().isArtistsPage())
        Browser().close()

    def test_navigateToAlbums(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoAlbums()
        self.assertTrue(Navigation().isAlbumsPage())
        Browser().close()

    def test_navigateToCities(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoCities()
        self.assertTrue(Navigation().isCitiesPage())
        Browser().close()

    def test_navigateToAbout(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoAbout()
        self.assertTrue(Navigation().isAboutPage())
        Browser().close()

    def test_homePageMarketingNavigation(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        HomePage().Marketing().viewSongs()
        self.assertTrue(Navigation().isSongsPage())
        Navigation().gotoHome()
        self.assertTrue(Navigation().isHomePage())
        HomePage().Marketing().viewArtists()
        self.assertTrue(Navigation().isArtistsPage())
        Navigation().gotoHome()
        self.assertTrue(Navigation().isHomePage())
        HomePage().Marketing().viewAlbums()
        self.assertTrue(Navigation().isAlbumsPage())
        Navigation().gotoHome()
        self.assertTrue(Navigation().isHomePage())
        HomePage().Marketing().viewCities()
        self.assertTrue(Navigation().isCitiesPage())
        Browser().close()

    def test_selectSongInstance(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoSongs()
        self.assertTrue(Navigation().isSongsPage())
        SongsPage().selectInstance()
        self.assertTrue(Navigation().isSongInstancePage())
        Browser().close()

    def test_selectArtistInstance(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoArtists()
        self.assertTrue(Navigation().isArtistsPage())
        ArtistsPage().selectInstance()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().close()

    def test_selectAlbumInstance(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoAlbums()
        self.assertTrue(Navigation().isAlbumsPage())
        AlbumsPage().selectInstance()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().close()

    def test_selectCityInstance(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoCities()
        self.assertTrue(Navigation().isCitiesPage())
        CitiesPage().selectInstance()
        self.assertTrue(Navigation().isCityInstancePage())
        Browser().close()

    def test_songInstanceLinkArtist(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoSongs()
        self.assertTrue(Navigation().isSongsPage())
        SongsPage().selectInstance()
        self.assertTrue(Navigation().isSongInstancePage())
        SongInstancePage().selectArtist()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().close()

    def test_songInstanceLinkAlbum(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoSongs()
        self.assertTrue(Navigation().isSongsPage())
        SongsPage().selectInstance()
        self.assertTrue(Navigation().isSongInstancePage())
        SongInstancePage().selectAlbum()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().close()

    def test_artistInstanceLinkAlbum(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoArtists()
        self.assertTrue(Navigation().isArtistsPage())
        ArtistsPage().selectInstance()
        self.assertTrue(Navigation().isArtistInstancePage())
        ArtistInstancePage().selectAlbum()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().close()

    def test_artistInstanceLinkSong(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoArtists()
        self.assertTrue(Navigation().isArtistsPage())
        ArtistsPage().selectInstance()
        self.assertTrue(Navigation().isArtistInstancePage())
        ArtistInstancePage().selectSong()
        self.assertTrue(Navigation().isSongInstancePage())
        Browser().close()

    def test_artistInstanceLinkCity(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoArtists()
        self.assertTrue(Navigation().isArtistsPage())
        ArtistsPage().selectInstance()
        self.assertTrue(Navigation().isArtistInstancePage())
        ArtistInstancePage().selectCity()
        self.assertTrue(Navigation().isCityInstancePage())
        Browser().close()

    def test_albumInstanceLinkArtist(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoAlbums()
        self.assertTrue(Navigation().isAlbumsPage())
        AlbumsPage().selectInstance()
        self.assertTrue(Navigation().isAlbumInstancePage())
        AlbumInstancePage().selectArtist()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().close()

    def test_albumInstanceLinkSong(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoAlbums()
        self.assertTrue(Navigation().isAlbumsPage())
        AlbumsPage().selectInstance()
        self.assertTrue(Navigation().isAlbumInstancePage())
        AlbumInstancePage().selectSong()
        self.assertTrue(Navigation().isSongInstancePage())
        Browser().close()

    def test_cityInstanceLinkSong(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoCities()
        self.assertTrue(Navigation().isCitiesPage())
        CitiesPage().selectInstance()
        self.assertTrue(Navigation().isCityInstancePage())
        CityInstancePage().selectSong()
        self.assertTrue(Navigation().isSongInstancePage())
        Browser().close()

    def test_cityInstanceLinkArtist(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoCities()
        self.assertTrue(Navigation().isCitiesPage())
        CitiesPage().selectInstance()
        self.assertTrue(Navigation().isCityInstancePage())
        CityInstancePage().selectArtist()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().close()

    def test_footerLinkGitHub(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Footer().gotoGitHubRepo()
        self.assertTrue(Footer().isGitHubRepo())
        Browser().close()

    def test_footerLinkGitBook(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Footer().gotoGitBook()
        self.assertTrue(Footer().isGitBook())
        Browser().close()

    def test_backNavigation(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Footer().gotoGitBook()
        Browser().back()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoArtists()
        self.assertTrue(Navigation().isArtistsPage())
        ArtistsPage().selectInstance()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().back()
        Browser().back()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoSongs()
        self.assertTrue(Navigation().isSongsPage())
        SongsPage().selectInstance()
        self.assertTrue(Navigation().isSongInstancePage())
        SongInstancePage().selectAlbum()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isSongInstancePage())
        SongInstancePage().selectArtist()
        self.assertTrue(Navigation().isArtistInstancePage())
        ArtistInstancePage().selectAlbum()
        self.assertTrue(Navigation().isAlbumInstancePage())
        AlbumInstancePage().selectArtist()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isSongInstancePage())
        Browser().close()

    def test_forwardNavigation(self):
        Browser().gotoMusepy()
        self.assertTrue(Navigation().isHomePage())
        Footer().gotoGitBook()
        Browser().back()
        self.assertTrue(Navigation().isHomePage())
        Navigation().gotoArtists()
        self.assertTrue(Navigation().isArtistsPage())
        Browser().back()
        self.assertTrue(Navigation().isHomePage())
        Browser().forward()
        self.assertTrue(Navigation().isArtistsPage())
        ArtistsPage().selectInstance()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().back()
        Browser().back()
        Browser().forward()
        self.assertTrue(Navigation().isArtistsPage())
        Navigation().gotoSongs()
        self.assertTrue(Navigation().isSongsPage())
        SongsPage().selectInstance()
        self.assertTrue(Navigation().isSongInstancePage())
        SongInstancePage().selectAlbum()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isSongInstancePage())
        Browser().forward()
        self.assertTrue(Navigation().isAlbumInstancePage())
        AlbumInstancePage().selectArtist()
        self.assertTrue(Navigation().isArtistInstancePage())
        ArtistInstancePage().selectAlbum()
        self.assertTrue(Navigation().isAlbumInstancePage())
        AlbumInstancePage().selectArtist()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().back()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().forward()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().forward()
        self.assertTrue(Navigation().isAlbumInstancePage())
        Browser().forward()
        self.assertTrue(Navigation().isArtistInstancePage())
        Browser().close()


if __name__ == '__main__':
    unittest.main()
